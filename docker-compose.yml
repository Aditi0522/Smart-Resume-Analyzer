services:
  db:
    image: postgres:17
    environment:
       POSTGRES_DB: ${POSTGRES_DB}
       POSTGRES_USER: ${POSTGRES_USER}
       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    depends_on:
      - redis
  
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/redis

  django-web:
    build: .
    command: gunicorn SMART.wsgi:application --bind 0.0.0.0:8000 --timeout 120
    container_name: django-docker
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DATABASE_ENGINE: ${DATABASE_ENGINE}
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_USERNAME: ${POSTGRES_USER}

      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
    volumes:
      - .:/app
      - ./media:/app/backend/media
    env_file:
      - .env

  worker:
    build: .
    volumes:
      - .:/app
      - ./media:/app/backend/media
    container_name: celery-worker
    command: celery -A SMART worker --loglevel=info
    depends_on:
      - redis
      - db
    environment:
      DEBUG: ${DEBUG}
      CELERY_BROKER: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    env_file:
      - .env

volumes:
  postgres_data: 